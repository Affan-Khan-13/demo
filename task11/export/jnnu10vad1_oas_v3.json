{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-11-18T07:26:41Z",
    "description": "This API allows managing reservations, tables, and user authentication. It integrates with AWS Lambda for backend processing."
  },
  "servers": [
    {
      "url": "https://jnnu10vad1.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/reservations": {
      "get": {
        "summary": "Fetch all reservations",
        "description": "This method retrieves a list of all reservations.",
        "responses": {
          "200": {
            "description": "A list of reservations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationsList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. A problem occurred with the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ]
      },
      "post": {
        "summary": "Create a new reservation",
        "description": "This method creates a new reservation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. A problem occurred with the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ]
      },
      "options": {
        "responses": {
          "200": {
            "description": "CORS headers set",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "Fetch all tables",
        "description": "This method retrieves a list of all available tables.",
        "responses": {
          "200": {
            "description": "A list of tables",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TablesList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ]
      },
      "post": {
        "summary": "Create a new table",
        "description": "This method creates a new table in the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Table"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Table successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ]
      },
      "options": {
        "responses": {
          "200": {
            "description": "CORS headers set",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "User sign-in",
        "description": "This method allows a user to sign in with their credentials.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ]
      }
    },
    "/signup": {
      "post": {
        "summary": "User registration",
        "description": "This method allows a new user to register.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ]
      }
    },
    "/tables/{tableId}": {
      "get": {
        "summary": "Fetch details of a specific table",
        "description": "This method retrieves details of a table by its ID.",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Empty": {
        "type": "object",
        "description": "An empty response body."
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message describing the issue"
          },
          "code": {
            "type": "string",
            "description": "Error code indicating the error type"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "description": "The ID of the reservation"
          },
          "tableId": {
            "type": "string",
            "description": "The ID of the table reserved"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who made the reservation"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time of the reservation"
          }
        }
      },
      "ReservationsList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Reservation"
        }
      },
      "Table": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "string",
            "description": "The unique ID of the table"
          },
          "seats": {
            "type": "integer",
            "description": "The number of seats available at the table"
          }
        }
      },
      "TablesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Table"
        }
      },
      "SignInRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the user"
          },
          "password": {
            "type": "string",
            "description": "The password of the user"
          }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username for the new account"
          },
          "password": {
            "type": "string",
            "description": "The password for the new account"
          },
          "email": {
            "type": "string",
            "description": "The email address of the user"
          }
        }
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": ["${booking_userpool}"],
          "type": "cognito_user_pools"
        }
      }
    }
  }
}
